name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using iPhone 15 (iOS 17.0)
    runs-on: self-hosted

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üîç Detect Default Scheme
        run: |
          echo "Listing available schemes..."
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; data = JSON.parse(STDIN.gets); puts data.dig('project', 'targets', 0) || data.dig('workspace', 'schemes', 0)")
          echo "$default" > default
          echo "‚úÖ Using default scheme: $default"

      - name: üèóÔ∏è Build for Testing
        env:
          scheme: ${{ 'default' }}
          platform: "iOS Simulator"
          device: "iPhone 15"
          os_version: "17.0"
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace"
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else 
            filetype_parameter="project"
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          echo "üèóÔ∏è Building scheme '$scheme' using $file_to_build on $device ($platform, iOS $os_version)"
          xcodebuild build-for-testing \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=$platform,name=$device,OS=$os_version"

      - name: üß™ Run Tests
        env:
          scheme: ${{ 'default' }}
          platform: "iOS Simulator"
          device: "iPhone 15"
          os_version: "17.0"
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then 
            filetype_parameter="workspace"
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else 
            filetype_parameter="project"
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          echo "üß™ Testing scheme '$scheme' using $file_to_build on $device ($platform, iOS $os_version)"
          xcodebuild test-without-building \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "platform=$platform,name=$device,OS=$os_version"
